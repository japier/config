
syntax enable
syntax spell toplevel
syntax on
setlocal spell spelllang=en_us
set spell
set background=dark
set fenc=utf-8
set ruler
set nocompatible
set visualbell


set history=9999
set formatoptions+=n


filetype plugin on
filetype indent on
filetype off
set clipboard+=unnamedplus

set number
set showmatch

set formatoptions=rq
set smartcase
set expandtab
set tabstop=2
set shiftwidth=2
set smartindent
set autoindent
let mapleader=','
highlight ExtraWhitespace ctermbg=red guibg=red

"
autocmd! bufwritepost .vimrc source %

"New

set nocompatible

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'tomasr/molokai'
Plugin 'tpope/vim-endwise'
Plugin 'geoffharcourt/vim-matchit'
Plugin 'vim-scripts/ruby-matchit'
Plugin 'pangloss/vim-javascript'
Plugin 'mileszs/ack.vim'
Plugin 'cakebaker/scss-syntax.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'jacoborus/tender'
Plugin 'dougnukem/vim-swap-lines'
"Plugin 'mxw/vim-jsx'
Plugin 'jelera/vim-javascript-syntax'
Plugin 'vim-syntastic/syntastic'
Plugin 'gcorne/vim-sass-lint'
Plugin 'mattn/emmet-vim'
Plugin 'mhartington/oceanic-next'
Plugin 'airblade/vim-gitgutter'
Plugin 'fleischie/vim-styled-components'
Plugin 'Shougo/deoplete.nvim'
Plugin 'carlitux/deoplete-ternjs'
Plugin 'Yggdroot/indentLine'
Plugin 'kien/ctrlp.vim'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'grvcoelho/vim-javascript-snippets'
Plugin 'w0rp/ale'
Plugin 'heavenshell/vim-jsdoc'
Plugin 'fatih/vim-go'
Plugin 'mdempsky/gocode', {'rtp': 'nvim/'}
Plugin 'majutsushi/tagbar'
Plugin 'maksimr/vim-jsbeautify'
Plugin 'deoplete-plugins/deoplete-go', { 'do': 'make'}
"Plugin 'zxqfl/tabnine-vim'
Plugin 'hashivim/vim-terraform'
"Plugin 'tbodt/deoplete-tabnine', { 'do': './install.sh' }

"Neomake
"autocmd BufRead,BufWrite * :Neomake
"let g:neomake_javascript_enabled_makers = ['eslint']

"Ale config <3
let b:ale_linters = ['eslint']

"Todos los pishis plugins

call vundle#end()            " required
filetype plugin indent on    " required

" Cntlp
set wildignore+=*/tmp/*,*/bin/*,*/node_modules/*,*/bower_components/*,*/vendor/*,*.so,*.swp,*.zip,*.lock,*/vendor/*

"Snipets
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
let g:UltiSnipsSnippetDirectories=$HOME.'/.vim/UltiSnips'

"Moore
map <C-a> :NERDTreeToggle<CR>
map <C-n> :noh<CR>
imap jk <ESC>

"Git gutter
map <C-g> :GitGutterToggle<CR>
nmap ]h <Plug>GitGutterNextHunk
nmap [h <Plug>GitGutterPrevHunk
nmap <C-m> :TagbarToggle<CR>

set undofile
set undodir=~/.vim/vimundo/
set undolevels=1000
colorscheme OceanicNext

let $NVIM_TUI_ENABLE_TRUE_COLOR=1
set termguicolors
set nolazyredraw

"Remove white spaces
autocmd BufWritePre * %s/\s\+$//e

"indent
let g:indentLine_enabled = 1
let g:indentLine_conceallevel = 0
let g:indentLine_color_gui = '#444444'

" Vim JSDoc
nmap <silent> <C-m> <Plug>(jsdoc)


" Deoplete
set runtimepath+=$HOME.'/.vim/bundle/deoplete.nvim/rplugin/python3/deoplete'
let g:deoplete#enable_at_startup = 1
let g:tern_request_timeout = 1
set completeopt-=preview

" Deoplete-go
let g:deoplete#sources#go#gocode_binary = $GOPATH.'/bin/gocode'
let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']

"Add extra filetypes
let g:tern#filetypes = [
                \ 'jsx',
                \ 'javascript.jsx',
                \ 'styled',
                \ 'vue',
                \ '...'
                \ ]


let g:python_host_prog = $HOME.'/.pyenv/versions/neovim2/bin'
let g:python3_host_prog = $HOME.'/.pyenv/versions/neovim3/bin/python'

"Syntaxtic config"
let g:syntatic_javascript_checkers = ['eslint']
let g:syntastic_always_populate_ = 1
let g:syntastic_javascript_eslint_args = ['eslint']
let g:syntastic_sass_checkers=["sasslint"]
let g:syntastic_scss_checkers=["sasslint"]
autocmd BufNewFile,BufReadPre *.js{,x}  let b:syntastic_checkers = ['eslint']

" silver searcher yo
if executable('ag')
  let g:ackprg = 'ag --vimgrep --smart-case'
  cnoreabbrev ag Ack
  cnoreabbrev aG Ack
  cnoreabbrev Ag Ack
  cnoreabbrev AG Ack
endif

" Vim-syntaxis tweeks
let g:javascript_conceal_arrow_function="âž¡"
let g:javascript_plugin_jsdoc=1
set conceallevel=2

" Do not jump to first result immediately! (ack/silver searcher)
cnoreabbrev Ack Ack!
nnoremap <Leader>a :Ack!<Space>

" JS beautifier
autocmd FileType javascript vnoremap <buffer>  <c-f> :call RangeJsBeautify()<cr>
autocmd FileType json vnoremap <buffer> <c-f> :call RangeJsonBeautify()<cr>
autocmd FileType jsx vnoremap <buffer> <c-f> :call RangeJsxBeautify()<cr>
autocmd FileType html vnoremap <buffer> <c-f> :call RangeHtmlBeautify()<cr>
autocmd FileType css vnoremap <buffer> <c-f> :call RangeCSSBeautify()<cr>
